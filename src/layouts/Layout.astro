---
import Footer from "../components/Footer.astro";
import Header from "../components/Header/Header.astro";

export interface Props {
  title?: string;
}

const { title } = Astro.props;
const finalTitle = title ? `${title} | Tao Bojlén` : "Tao Bojlén";
---

<!DOCTYPE html>
<html lang="en" class="h-full antialiased">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/img/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/img/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/img/favicon-16x16.png"
    />
    <meta name="googlebot" content="noindex" />
    <title>{finalTitle}</title>
  </head>
  <body class="flex h-full flex-col bg-zinc-50 dark:bg-black">
    <div class="fixed inset-0 flex justify-center sm:px-8">
      <div class="flex w-full max-w-7xl lg:px-8">
        <div
          class="w-full bg-white ring-1 ring-zinc-100 dark:bg-zinc-900 dark:ring-zinc-300/20"
        >
        </div>
      </div>
    </div>
    <div class="relative">
      <Header />
      <main>
        <slot />
      </main>
      <Footer />
    </div>
  </body>
</html>

<script
  is:inline
  defer=""
  data-domain="btao.org"
  data-api="/workers/btao/event"
  src="/workers/btao/script.outbound-links.js"
></script>

<script>
  let darkModeMediaQuery = window.matchMedia("(prefers-color-scheme: dark)");

  updateMode();
  darkModeMediaQuery.addEventListener("change", updateModeWithoutTransitions);
  window.addEventListener("storage", updateModeWithoutTransitions);

  function updateMode() {
    let isSystemDarkMode = darkModeMediaQuery.matches;
    let isDarkMode =
      window.localStorage.isDarkMode === "true" ||
      (!("isDarkMode" in window.localStorage) && isSystemDarkMode);

    if (isDarkMode) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }

    if (isDarkMode === isSystemDarkMode) {
      delete window.localStorage.isDarkMode;
    }
  }

  function disableTransitionsTemporarily() {
    document.documentElement.classList.add("[&_*]:!transition-none");
    window.setTimeout(() => {
      document.documentElement.classList.remove("[&_*]:!transition-none");
    }, 0);
  }

  function updateModeWithoutTransitions() {
    disableTransitionsTemporarily();
    updateMode();
  }
</script>
