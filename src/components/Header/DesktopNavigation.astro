---
import { navItems } from "../../nav";

interface Props {
  class?: string;
}
const { class: className } = Astro.props;

const currentPath = new URL(Astro.request.url).pathname;
const normalize = (href: string) =>
  href
    .split("/")
    .filter((s) => s !== "")
    .join("/");
const isActive = (href: string) => {
  return normalize(href) === normalize(currentPath);
};
---

<nav class={className}>
  <ul
    class="flex rounded-full bg-white/90 px-3 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10"
  >
    {
      navItems.map((link) => (
        <li>
          <a
            href={link.href}
            class:list={[
              "relative block px-3 py-2 transition",
              isActive(link.href)
                ? "text-teal-500 dark:text-teal-400"
                : "hover:text-teal-500 dark:hover:text-teal-400",

              "hover:text-teal-500 dark:hover:text-teal-400",
            ]}
          >
            {link.name}
            {isActive(link.href) && (
              <span class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0" />
            )}
          </a>
        </li>
      ))
    }
  </ul>
</nav>
