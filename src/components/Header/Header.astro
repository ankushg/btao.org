---
import Container from "../Container/Container.astro";
import Avatar from "./Avatar.astro";
import AvatarContainer from "./AvatarContainer.astro";
import DesktopNavigation from "./DesktopNavigation.astro";
import ModeToggle from "./ModeToggle.astro";
import { MobileNavigation } from "./MobileNavigation.jsx";

const pathname = new URL(Astro.request.url).pathname;
const isHomePage = pathname === "/";
---

<style>
  .position-header-position {
    position: var(--header-position);
  }
  .position-header-inner-position {
    position: var(--header-inner-position);
  }
  .transform-avatar-image {
    transform: var(--avatar-image-transform);
  }
  .opacity-avatar-border {
    opacity: var(--avatar-border-opacity, 0);
  }
  .transform-avatar-border {
    transform: var(--avatar-border-transform);
  }
</style>

<header
  class="relative z-50 flex flex-col"
  style={{
    height: "var(--header-height)",
    marginBottom: "var(--header-mb)",
  }}
>
  {
    isHomePage && (
      <>
        <div class="order-last mt-[calc(theme(spacing.16)-theme(spacing.3))]" />
        <Container class="top-0 order-last -mb-3 pt-3 header-position">
          <div class="top-[var(--avatar-top,theme(spacing.3))] w-full position-header-position-header-inner-position">
            <div class="relative">
              <AvatarContainer class="absolute left-0 top-3 origin-left transition-opacity opacity-avatar-border transform-avatar-border" />
              <Avatar
                large
                class="block h-16 w-16 origin-left transform-avatar-image"
              />
            </div>
          </div>
        </Container>
      </>
    )
  }
  <div class="top-0 z-10 h-16 pt-6 position-header-position-header-position">
    <Container
      class="top-[var(--header-top,theme(spacing.6))] w-full position-header-inner-position"
    >
      <div class="relative flex gap-4">
        <div class="flex flex-1">
          {
            !isHomePage && (
              <AvatarContainer>
                <Avatar />
              </AvatarContainer>
            )
          }
        </div>
        <div class="flex flex-1 justify-end md:justify-center">
          <MobileNavigation
            client:load
            className="pointer-events-auto md:hidden"
          />
          <DesktopNavigation class="pointer-events-auto hidden md:block" />
        </div>
        <div class="flex justify-end md:flex-1">
          <div class="pointer-events-auto">
            <ModeToggle />
          </div>
        </div>
      </div>
    </Container>
  </div>
</header>
{isHomePage && <div style={{ height: "var(--content-offset)" }} />}
